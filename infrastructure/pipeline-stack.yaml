AWSTemplateFormatVersion: '2010-09-09'
Description: 'CodeDeploy Infrastructure for Tag-Finder application'

Parameters:
  VPCStackName:
    Type: String
    Description: Name of the VPC Stack
    Default: tag-finder-vpc

  ECSStackName:
    Type: String
    Description: Name of the ECS Stack
    Default: tag-finder-ecs

Resources:
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - codecommit:*
                  - codedeploy:*
                  - ecs:*
                  - ecr:*
                  - cloudwatch:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"

  # CodeDeploy
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ComputePlatform: ECS

  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeDeployPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecs:*
                  - codedeploy:*
                  - iam:*
                  - elasticloadbalancing:*
                  - s3:*
                  - cloudwatch:*
                Resource: "*"

  # CodeDeploy Deployment Group
  CodeDeployGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      ECSServices:
        - ClusterName:
            Fn::ImportValue: !Sub "${ECSStackName}-ClusterName"
          ServiceName:
            Fn::ImportValue: !Sub "${ECSStackName}-ServiceName"
      DeploymentConfigName: CodeDeployDefault.ECSAllAtOnce
      DeploymentStyle:
        DeploymentType: BLUE_GREEN
        DeploymentOption: WITH_TRAFFIC_CONTROL
      BlueGreenDeploymentConfiguration:
        TerminateBlueInstancesOnDeploymentSuccess:
          Action: TERMINATE
          TerminationWaitTimeInMinutes: 5
        DeploymentReadyOption:
          ActionOnTimeout: CONTINUE_DEPLOYMENT
          WaitTimeInMinutes: 0
      LoadBalancerInfo:
        TargetGroupPairInfoList:
          - TargetGroups:
              - Name: Main-TG
              - Name: Test-TG
            ProdTrafficRoute:
              ListenerArns:
                - Fn::ImportValue: !Sub "${ECSStackName}-Listener"
            TestTrafficRoute:
              ListenerArns:
                - Fn::ImportValue: !Sub "${ECSStackName}-TestListener"

  # CodePipeline
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Tags:
        - Key: Name
          Value: TagFinderCodePipeline
      ArtifactStore:
        Type: S3
        Location: tag-finder-configs
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                S3Bucket: s3-gallery-mascot-new
                S3ObjectKey: deployment-package.zip
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeployToECS
                Version: '1'
              Configuration:
                ApplicationName: !Ref CodeDeployApplication
                DeploymentGroupName: !Ref CodeDeployGroup
                TaskDefinitionTemplatePath: taskdef.json
                AppSpecTemplatePath: appspec.yaml
                TaskDefinitionTemplateArtifact: SourceOutput
                AppSpecTemplateArtifact: SourceOutput
              InputArtifacts:
                - Name: SourceOutput

Outputs:
  CodeDeployApplicationName:
    Description: CodeDeploy Application Name
    Value: !Ref CodeDeployApplication
    Export:
      Name: !Sub "${AWS::StackName}-CodeDeployApplicationName"

  CodeDeployGroupName:
    Description: CodeDeploy Deployment Group Name
    Value: !Ref CodeDeployGroup
    Export:
      Name: !Sub "${AWS::StackName}-CodeDeployGroupName"